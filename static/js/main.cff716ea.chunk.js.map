{"version":3,"sources":["containers/Drums/AudioList.js","containers/Drums/AudioSlider.js","containers/Drums/VolumeControl.js","utils/rhythm.js","containers/Drums/DrumKeyboardControls.js","containers/Drums/DrumKeyboard.js","containers/Drums/SamplePlayer.js","containers/Drums/DrumMachine.js","containers/Drums/index.js","App.js","reportWebVitals.js","index.js"],"names":["travisAudioRoot","cloudinaryAudioRoot","neuralAudioRoot","list","keyboardKey","src","AudioList","map","x","className","id","preload","useStyles","makeStyles","root","marginTop","slider","color","AudioSlider","props","classes","React","useState","value","setValue","useEffect","parseInt","localStorage","getItem","Typography","gutterBottom","Grid","container","spacing","item","xs","Slider","onChange","event","newValue","setItem","volumeSetter","aria-labelledby","audioElements","VolumeControl","volume","setVolume","Array","from","document","getElementsByClassName","storageVolume","forEach","element","playSound","ele","getElementById","currentTime","play","getElementsByName","style","background","setTimeout","handleKeyboardMark","playRhythm","rhythms","length","leadSound","key","i","timeout","time","DrumKeyboardControls","ref","useRef","playPressTime","setPlayPressTime","name","setName","onClick","Date","getTime","soundLengthMS","clearInterval","current","setInterval","savedItems","JSON","parse","Object","keys","defaultName","data","stringify","placeholder","e","target","keyboardFirstRow","keyboardSecondRow","keyboardThirdRow","css","DrumKeyboard","setRhythms","keyboardElement","addEventListener","handleKeyDown","removeEventListener","toUpperCase","s","concat","renderButtons","arr","SamplePlayer","rhytmsFromStorage","open","setOpen","FormControl","InputLabel","Select","labelId","onClose","onOpen","minWidth","MenuItem","k","Button","currentBeat","DrumMachine","DrumsPage","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.cff716ea.chunk.js","sourcesContent":["const travisAudioRoot = '/ritam/Audio/Rhythm/travis';\nconst cloudinaryAudioRoot = '/ritam/Audio/Rhythm/cloudinary';\nconst neuralAudioRoot = '/ritam/Audio/Rhythm/neural';\n\nexport const list = [\n  { keyboardKey: 'Q', src: `${travisAudioRoot}/chant.mp3` },\n  { keyboardKey: 'W', src: `${neuralAudioRoot}/clap-vh.mp3` },\n  { keyboardKey: 'E', src: `${travisAudioRoot}/clap_1.mp3` },\n  { keyboardKey: 'R', src: `${travisAudioRoot}/clap_2.mp3` },\n  { keyboardKey: 'T', src: `${travisAudioRoot}/kick_1.mp3` },\n  { keyboardKey: 'Y', src: `${travisAudioRoot}/kick_2.mp3` },\n  { keyboardKey: 'U', src: `${cloudinaryAudioRoot}/cowbell.mp3` },\n  { keyboardKey: 'I', src: `${travisAudioRoot}/snare.mp3` },\n  { keyboardKey: 'O', src: `${cloudinaryAudioRoot}/snare.mp3` },\n  { keyboardKey: 'P', src: `${neuralAudioRoot}/flares-snare-vh.mp3` },\n\n  { keyboardKey: 'A', src: `${travisAudioRoot}/hat_closed.mp3` },\n  { keyboardKey: 'S', src: `${travisAudioRoot}/hat_open.mp3` },\n  { keyboardKey: 'D', src: `${travisAudioRoot}/crash.mp3` },\n  { keyboardKey: 'F', src: `${cloudinaryAudioRoot}/crash.mp3` },\n  { keyboardKey: 'G', src: `${cloudinaryAudioRoot}/hi_tom.mp3` },\n  { keyboardKey: 'H', src: `${neuralAudioRoot}/slamdam-tom-low-vh.mp3` },\n  { keyboardKey: 'J', src: `${neuralAudioRoot}/slamdam-tom-high-vh.mp3` },\n  { keyboardKey: 'K', src: `${neuralAudioRoot}/slamdam-tom-mid-vh.mp3` },\n  { keyboardKey: 'L', src: `${neuralAudioRoot}/rim-vh.mp3` },\n\n]\n\nexport default function AudioList() {\n  return <div>\n    {list.map(x => (\n      <audio\n        key={x.keyboardKey}\n        className=\"clip\"\n        id={x.keyboardKey}\n        src={x.src}\n        preload=\"auto\"\n      ></audio>\n    ))}\n  </div>\n}","import React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\nimport VolumeDown from '@material-ui/icons/VolumeDown';\nimport VolumeUp from '@material-ui/icons/VolumeUp';\n\nconst useStyles = makeStyles({\n  root: {\n    marginTop: '2rem'\n  },\n  slider: {\n    color: '#6731a3'\n  }\n});\n\nexport default function AudioSlider(props) {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(100);\n\n  useEffect(() => {\n    setValue(parseInt(localStorage.getItem(\"volume\")));\n  }, [])\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n    localStorage.setItem(\"volume\", newValue);\n    props.volumeSetter(newValue / 100);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Typography id=\"continuous-slider\" gutterBottom>\n        Volume\n      </Typography>\n      <Grid container spacing={2}>\n        <Grid item>\n          <VolumeDown />\n        </Grid>\n        <Grid item xs>\n          <Slider value={value} onChange={handleChange} aria-labelledby=\"continuous-slider\" className={classes.slider} />\n        </Grid>\n        <Grid item>\n          <VolumeUp />\n        </Grid>\n      </Grid>\n    </div>\n  );\n}","import { useState, useEffect } from \"react\";\nimport AudioList from \"./AudioList\";\nimport AudioSlider from \"./AudioSlider\";\n\n// It's good performance-wise to cache the audio elements as we are setting the volume globally to every element.\nlet audioElements = [];\n\nexport default function VolumeControl() {\n  const [volume, setVolume] = useState(1);\n\n  useEffect(() => {\n    audioElements = Array.from(document.getElementsByClassName(\"clip\"));\n    const storageVolume = localStorage.getItem(\"volume\") || 100;\n    setVolume(storageVolume / 100)\n  }, []);\n\n  useEffect(() => {\n    audioElements.forEach((element) => {\n      element.volume = volume;\n    });\n  }, [volume]);\n\n  return <div>\n    <div id=\"volume-control\">\n      <AudioSlider volumeSetter={setVolume} />\n    </div>\n    <AudioList />\n  </div>\n}","\nexport const delay = (timeout, callback) => setTimeout(callback, timeout);\n\nconst handleKeyboardMark = (id) => {\n  const [ele] = document.getElementsByName(id);\n  if (ele) {\n    ele.style.background = \"var(--secondary)\";\n    ele.style.color = \"white\";\n    setTimeout(() => {\n      ele.style.background = \"\";\n      ele.style.color = \"black\";\n    }, 100);\n  }\n}\n\nexport function playSound(id) {\n  const ele = document.getElementById(id);\n  if (ele) {\n    ele.currentTime = 0;\n    ele.play();\n    handleKeyboardMark(id)\n  }\n}\n\nexport const playRhythm = (rhythms) => {\n  if (rhythms.length) {\n    const leadSound = rhythms[0];\n    playSound(leadSound.key);\n    for (let i = 1; i < rhythms.length; i++) {\n      delay(rhythms[i].time - leadSound.time, () => {\n        let currentRhythm = rhythms[i];\n        playSound(currentRhythm.key);\n      });\n    }\n  }\n};","import React, { useState, useRef } from \"react\";\nimport { playRhythm } from 'utils/rhythm';\n\nfunction DrumKeyboardControls({ rhythms }) {\n  const ref = useRef();\n  const [playPressTime, setPlayPressTime] = useState();\n  const [name, setName] = useState('');\n\n  const handlePlayRhythm = () => {\n    if (rhythms.length) {\n      const time = new Date().getTime();\n      setPlayPressTime(time)\n      playRhythm(rhythms);\n      const soundLengthMS = rhythms[rhythms.length - 1].time - rhythms[0].time;\n      clearInterval(ref.current);\n      ref.current = setInterval(\n        () => {\n          playRhythm(rhythms)\n        },\n        soundLengthMS + (time - rhythms[rhythms.length - 1].time)\n      );\n    }\n  };\n\n  const handleRhythmSave = () => {\n    if (rhythms.length) {\n      let savedItems = JSON.parse(localStorage.getItem(\"rhythms\")) || {};\n      const length = Object.keys(savedItems).length;\n      const defaultName = `rhythm${length + 1}`;\n      savedItems[name || defaultName] = {\n        playPressTime,\n        data: rhythms,\n      };\n      localStorage.setItem(\"rhythms\", JSON.stringify(savedItems));\n    }\n  }\n\n\n  return (\n    <div className=\"keyboard-controls\">\n      <div>\n        <button className=\"drum-pad\" onClick={handlePlayRhythm}>\n          PLAY\n        </button>\n        <button className=\"drum-pad\" onClick={handleRhythmSave}>\n          SAVE\n        </button>\n      </div>\n      <div className=\"form\">\n        <input placeholder=\"Name of sample\" value={name} onChange={(e) => setName(e.target.value)} />\n      </div>\n    </div>\n  );\n}\n\nexport default DrumKeyboardControls;\n","import React, { useState, useEffect } from \"react\";\nimport { playSound } from 'utils/rhythm';\nimport DrumKeyboardControls from \"./DrumKeyboardControls\";\n\nconst keyboardFirstRow = [\n  { key: 'Q' },\n  { key: 'W' },\n  { key: 'E' },\n  { key: 'R' },\n  { key: 'T' },\n  { key: 'Y' },\n  { key: 'U' },\n  { key: 'I' },\n  { key: 'O' },\n  { key: 'P' },\n]\nconst keyboardSecondRow = [\n  { key: 'A' },\n  { key: 'S' },\n  { key: 'D' },\n  { key: 'F' },\n  { key: 'G' },\n  { key: 'H' },\n  { key: 'J' },\n  { key: 'K' },\n  { key: 'L' },\n]\nconst keyboardThirdRow = [\n  { key: 'Z', css: 'inactive' },\n  { key: 'X', css: 'inactive' },\n  { key: 'C', css: 'inactive' },\n  { key: 'V', css: 'inactive' },\n  { key: 'B', css: 'inactive' },\n  { key: 'N', css: 'inactive' },\n  { key: 'M', css: 'inactive' },\n]\n\nfunction DrumKeyboard() {\n  const [rhythms, setRhythms] = useState([]);\n  useEffect(() => {\n    const keyboardElement = document.getElementById(\"drum-keyboard\");\n    keyboardElement.addEventListener(\"keydown\", handleKeyDown);\n    return () => {\n      keyboardElement.removeEventListener(\"keydown\", () => { });\n    };\n  }, []);\n\n  const handleKeyDown = (e) => {\n    const key = e.key.toUpperCase();\n    // if audioElement exist add\n    if (document.getElementById(key)) {\n      playSound(key);\n      const time = new Date().getTime();\n      setRhythms((s) => s.concat({ key, time }));\n    }\n  };\n\n  const renderButtons = (arr) => {\n    return arr.map((x) => (\n      <button\n        key={x.key}\n        name={x.key}\n        onClick={() => playSound(x.key)}\n        className={`key enabled ${x.css}`}\n      >\n        {x.key}\n      </button>\n    ))\n  }\n\n  return (\n    <div id=\"button-container\">\n      <div id=\"drum-keyboard\">\n        <div className=\"keyboard-base\">\n          <div className=\"key\">~</div>\n          <div className=\"key\">1</div>\n          <div className=\"key\">2</div>\n          <div className=\"key\">3</div>\n          <div className=\"key\">4</div>\n          <div className=\"key\">5</div>\n          <div className=\"key\">6</div>\n          <div className=\"key\">7</div>\n          <div className=\"key\">8</div>\n          <div className=\"key\">9</div>\n          <div className=\"key\">0</div>\n          <div className=\"key\">-</div>\n          <div className=\"key\">+</div>\n          <div className=\"key delete\">Delete</div>\n          <div className=\"key tab\">Tab</div>\n          {renderButtons(keyboardFirstRow)}\n          <div className=\"key\">[</div>\n          <div className=\"key\">]</div>\n          <div className=\"key backslash\">\\</div>\n          <div className=\"key capslock\">CapsLock</div>\n          {renderButtons(keyboardSecondRow)}\n          <div className=\"key\">;</div>\n          <div className=\"key\">'</div>\n          <div className=\"key return\">Return</div>\n          <div className=\"key leftshift\">Shift</div>\n          {renderButtons(keyboardThirdRow)}\n          <div className=\"key\">,</div>\n          <div className=\"key\">.</div>\n          <div className=\"key\">/</div>\n          <div className=\"key rightshift\">Shift</div>\n          <div className=\"key leftctrl\">Ctrl</div>\n          <div className=\"key\">Alt</div>\n          <div className=\"key command\">Command</div>\n          <div className=\"key space\">Space</div>\n          <div className=\"key command\">command</div>\n          <div className=\"key\">Alt</div>\n          <div className=\"key\">Ctrl</div>\n          <div className=\"key\">Fn</div>\n        </div>\n      </div>\n\n      <DrumKeyboardControls\n        rhythms={rhythms}\n      />\n    </div>\n  );\n}\n\nexport default DrumKeyboard;\n","import { useState, useRef } from 'react';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\n\nimport { playRhythm } from 'utils/rhythm';\n\nexport default function SamplePlayer() {\n  const ref = useRef();\n  const rhytmsFromStorage = JSON.parse(localStorage.getItem(\"rhythms\")) || {};\n  const [value, setValue] = useState('');\n  const [open, setOpen] = useState(false);\n\n  const handleChange = (event) => {\n    setValue(event.target.value);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n  const handleDeleteRhythm = () => {\n    delete rhytmsFromStorage[value];\n    localStorage.setItem('rhythms', JSON.stringify(rhytmsFromStorage));\n    clearInterval(ref.current);\n    setValue(\"\")\n    // history.push(`/${type}`);\n  }\n  const handlePlayRhythm = () => {\n    const currentBeat = rhytmsFromStorage[value];\n    const { playPressTime, data } = currentBeat;\n    playRhythm(data);\n    const soundLengthMS = data[data.length - 1].time - data[0].time;\n    clearInterval(ref.current);\n    ref.current = setInterval(\n      () => {\n        playRhythm(data);\n      },\n      soundLengthMS + (playPressTime - data[data.length - 1].time)\n    );\n  };\n\n  return <div>\n    <FormControl>\n      <InputLabel id=\"select-label\">Choose sample</InputLabel>\n      <Select\n        labelId=\"select-label\"\n        open={open}\n        onClose={handleClose}\n        onOpen={handleOpen}\n        value={value}\n        onChange={handleChange}\n        style={{\n          minWidth: 150,\n        }}\n      >\n        <MenuItem value=\"\">\n          <em>None</em>\n        </MenuItem>\n        {Object.keys(rhytmsFromStorage).map(k => (\n          <MenuItem key={k} value={k}>\n            {k}\n          </MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n    {value && <>\n      <Button onClick={handlePlayRhythm}>\n        Play\n      </Button>\n      <Button onClick={handleDeleteRhythm}>\n        Delete\n      </Button>\n    </>}\n  </div>\n}","import VolumeControl from \"./VolumeControl\";\nimport DrumKeyboard from \"./DrumKeyboard\";\nimport SamplePlayer from \"./SamplePlayer\";\n\nfunction DrumMachine() {\n  return (\n    <div id=\"drum-machine\">\n      <DrumKeyboard />\n      <div id=\"controls\">\n        <VolumeControl />\n      </div>\n      <SamplePlayer />\n    </div>\n  );\n}\n\nexport default DrumMachine;\n","import DrumMachine from './DrumMachine';\nimport './styles.scss';\n\nexport default function DrumsPage() {\n  return (\n    <div className=\"page-content\">\n      <DrumMachine />\n    </div>\n  )\n}","import DrumsPage from \"containers/Drums\";\n// import {\n//   BrowserRouter as Router,\n//   Redirect,\n//   Switch,\n//   Route,\n// } from \"react-router-dom\";\n\nfunction App() {\n  // const renderPageLayout = (C, p) => (\n  //   <div className=\"page\">\n  //     <C {...p} />\n  //   </div>\n  // )\n  // return (\n  //   <Router basename=\"/ritam\">\n  //     <div className=\"page-layout\">\n  //       <Switch>\n  //         <Route exact path=\"/\" render={p => renderPageLayout(DrumsPage, p)} />\n  //         <Route path=\"\" render={p => <Redirect to=\"/\" />} />\n  //       </Switch>\n  //     </div>\n  //   </Router>\n  // );\n  return (\n    <div className=\"page\">\n      <DrumsPage />\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}